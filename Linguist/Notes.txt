asciidoc --backend=xhtml11 --out-file=Linguist/README.html Linguist/README.asciidoc && open Linguist/README.html


* Release checklist:
	- push changes
	- create a zip file (and record the command used to create it)
	- make sure that the zip file can be used to install the addon)
	- upload a new zip file
	- email
	- create a new branch for the release
* Email people.
* Make an annoucement somewhere?
* Add it to the official list of studio 3rd party addons?

* Add a directory with test files for each language.
* May want to use a weak list to avoid doing a snapshot -> doc -> extension -> language search every time
	- make sure that this cache is reset on rehup
* May want to add a shebang option to language files:
	- would need to cache this information if it is found in a snapshot
* Use reflection to init ms_elements.
* Add more elements?
* Can we log somewhere if there are errors in the static Languages ctor?
	- event log?
* Add to the studio addins site?
* Send email to freshmeat or somewhere?
* Might want to add an optional global field to default style which would cause it to be applied to all
  text documents (not just the ones with a matching language).
* Would be nice to get multi-line elements (like C-style comments) working:
	- doesn't seem possible to get the entire text 
	- usually get called with spans consisting of one line
* Would be really nice to have the styles.field file be live:
	- styles are handled by the format classes which are instantiated by the editor
	- saving these into a list when they are created and updating them later had no effect
	- so seems that we would have to somehow tell the editor that the formats have changed
* Release checklist:
 	- test a few different languages
	- search for TODO (in all files)
	- update the version in the readme, the assembly, and the manifest
	- make sure that the language element names listed in the readme are correct
	- review the readme
	- use git log --oneline > CHANGE_LOG
	- update CHANGES file
	- push changes
	- upload a new zip file
	- email
	- create a new branch for the release
